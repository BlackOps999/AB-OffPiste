{"version":3,"sources":["components/Button.js","components/Navbar.js","components/HeroSection.js","components/pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","to","Navbar","useState","click","setClick","button","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","HeroSection","src","autoPlay","loop","muted","class","Home","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yOAIMA,EAAS,CAAC,eAAgB,gBAE1BC,EAAQ,CAAC,cAAe,cAEjBC,EAAS,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,WAEpDC,EAAmBR,EAAOS,SAASH,GACvCA,EACAN,EAAO,GAGHU,EAAkBT,EAAMQ,SAASF,GACrCA,EACAN,EAAO,GAET,OACI,cAAC,IAAD,CAAMU,UAAU,aAAaC,GAAG,WAAhC,SACI,wBACID,UAAS,cAASH,EAAT,YAA6BE,GACtCL,QAASA,EACTD,KAAMA,EAHV,SAKKD,O,MCmCFU,MAxDf,WACI,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAkB,kBAAMH,GAAS,IAEjCI,EAAa,WACZC,OAAOC,YAAc,IACpBJ,GAAU,GAEVA,GAAU,IAWlB,OAPAK,qBAAU,WACNH,MACD,IAGHC,OAAOG,iBAAiB,SAAUJ,GAG9B,mCACI,sBAAKT,UAAU,SAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,eAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAcN,QAASc,EAA9C,0BACiB,mBAAGR,UAAU,+BAE9B,qBAAKA,UAAU,YAAYN,QAzBvB,kBAAMW,GAAUD,IAyBpB,SACI,mBAAGJ,UAAWI,EAAQ,eAAiB,qBAG/C,qBAAIJ,UAAWI,EAAQ,kBAAoB,WAA3C,UACI,oBAAIJ,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,IAAIP,QAASc,EAA5C,oBAEJ,oBAAIR,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,OAAOP,QAASc,EAA/C,mBAEJ,oBAAIR,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,gBAAgBP,QAASc,EAAxD,4BAEJ,oBAAIR,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,YAAYP,QAASc,EAApD,wBAEJ,6BACI,cAAC,IAAD,CAAMR,UAAU,mBAAmBC,GAAG,aAAaP,QAASc,EAA5D,6BAGPF,GAAU,cAAC,EAAD,CAAQX,YAAY,eAApB,8B,kBCpCZmB,MAdf,WACI,OACI,sBAAKd,UAAU,iBAAf,UACI,uBAAOe,IAAI,wBAAwBC,UAAQ,EAACC,MAAI,EAACC,OAAK,IACtD,sDACA,4CACA,sBAAKlB,UAAU,YAAf,UACI,eAAC,EAAD,CAAQA,UAAU,OAAOL,YAAY,eAAeC,WAAW,aAA/D,UAA4E,mBAAGuB,MAAM,sCAArF,WACA,eAAC,EAAD,CAAQnB,UAAU,OAAOL,YAAY,eAAeC,WAAW,aAA/D,UAA4E,mBAAGuB,MAAM,sCAArF,sBCDDC,MARf,WACI,OACI,mCACI,cAAC,EAAD,OCaGC,MAbf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,cCD1BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a68eae6a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\n\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\nexport const Button = ({children, type, onClick, buttonStyle, buttonSize}) => {\r\n    //if buttonStyle not provided as a param, default to first STYLES array item i.e. btn-primary\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) \r\n    ? buttonStyle \r\n    : STYLES[0]; \r\n\r\n    //if buttonSize not provided as a param, default to first SIZES array item i.e. btn-medium\r\n    const checkButtonSize = SIZES.includes(buttonSize)\r\n    ? buttonSize\r\n    : SIZES [0];\r\n\r\n    return (\r\n        <Link className='btn-mobile' to='/Contact'>\r\n            <button \r\n                className={`btn ${checkButtonStyle} ${checkButtonSize}`} \r\n                onClick={onClick}\r\n                type={type}\r\n            >\r\n                {children}\r\n            </button>\r\n        </Link>\r\n    );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button } from './Button';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if(window.innerWidth <= 960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    //whenever screen resizes, review screen size and show or hide the button\r\n    window.addEventListener('resize', showButton)\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-container\">\r\n                    <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                        Sherry Honar <i className=\"fa-solid fa-stethoscope\" />\r\n                    </Link>\r\n                    <div className=\"menu-icon\" onClick={handleClick}>\r\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                    </div>\r\n                </div>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-links\" to=\"/\" onClick={closeMobileMenu}>Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-links\" to=\"/bio\" onClick={closeMobileMenu}>Bio</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-links\" to=\"/publications\" onClick={closeMobileMenu}>Publications</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-links\" to=\"/services\" onClick={closeMobileMenu}>Services</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"nav-links-mobile\" to=\"/contactme\" onClick={closeMobileMenu}>Contact Me</Link>\r\n                    </li>\r\n                </ul>\r\n                {button && <Button buttonStyle='btn--outline'>Contact Me</Button>}\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport '../App.css'\r\nimport { Button } from './Button'\r\nimport './HeroSection.css';\r\n\r\nfunction HeroSection() {\r\n    return (\r\n        <div className=\"hero-container\">\r\n            <video src=\"../videos/video-1.mp4\" autoPlay loop muted />\r\n            <h1>Doctor Sherry Awaits</h1>\r\n            <p>Get intouch</p>\r\n            <div className=\"hero-btns\">\r\n                <Button className=\"btns\" buttonStyle=\"btn--outline\" buttonSize=\"btn--large\"><i class=\"fa-solid fa-user-doctor-hair-long\"></i> Bio </Button>\r\n                <Button className=\"btns\" buttonStyle=\"btn--primary\" buttonSize=\"btn--large\"><i class=\"fa-solid fa-user-doctor-hair-long\"></i> Contact </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeroSection;\r\n\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport HeroSection from '../HeroSection';\r\n\r\nfunction Home () {\r\n    return (\r\n        <>\r\n            <HeroSection />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import REACT from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './components/pages/Home';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar />\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Home/>} />\r\n        </Routes>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}