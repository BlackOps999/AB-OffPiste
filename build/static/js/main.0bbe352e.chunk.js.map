{"version":3,"sources":["persistence/index.js","persistence/mysql.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["process","MYSQL_HOST","module","exports","require","pool","waitPort","fs","mysql","HOST","HOST_FILE","MYSQL_HOST_FILE","USER","MYSQL_USER","USER_FILE","MYSQL_USER_FILE","PASSWORD","MYSQL_PASSWORD","PASSWORD_FILE","MYSQL_PASSWORD_FILE","DB","MYSQL_DB","DB_FILE","MYSQL_DB_FILE","a","host","readFileSync","user","password","database","port","createPool","connectionLimit","Promise","acc","rej","query","err","console","log","end","rows","map","item","Object","assign","completed","id","name","init","teardown","getItems","getItem","storeItem","updateItem","removeItem","config","applicationReducer","state","action","type","isLoading","isError","data","payload","error","Error","App","REACT","className","href","src","logo","alt","Button","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bbe352e.chunk.js","sourcesContent":["if (process.env.MYSQL_HOST) module.exports = require('./mysql');\r\nelse ;\r\n","const waitPort = require('wait-port');\r\nconst fs = require('fs');\r\nconst mysql = require('mysql');\r\n\r\nconst {\r\n    MYSQL_HOST: HOST,\r\n    MYSQL_HOST_FILE: HOST_FILE,\r\n    MYSQL_USER: USER,\r\n    MYSQL_USER_FILE: USER_FILE,\r\n    MYSQL_PASSWORD: PASSWORD,\r\n    MYSQL_PASSWORD_FILE: PASSWORD_FILE,\r\n    MYSQL_DB: DB,\r\n    MYSQL_DB_FILE: DB_FILE,\r\n} = process.env;\r\n\r\nlet pool;\r\n\r\nasync function init() {\r\n    const host = HOST_FILE ? fs.readFileSync(HOST_FILE) : HOST;\r\n    const user = USER_FILE ? fs.readFileSync(USER_FILE) : USER;\r\n    const password = PASSWORD_FILE ? fs.readFileSync(PASSWORD_FILE) : PASSWORD;\r\n    const database = DB_FILE ? fs.readFileSync(DB_FILE) : DB;\r\n\r\n    await waitPort({ host, port : 3306});\r\n\r\n    pool = mysql.createPool({\r\n        connectionLimit: 5,\r\n        host,\r\n        user,\r\n        password,\r\n        database,\r\n    });\r\n\r\n    return new Promise((acc, rej) => {\r\n        pool.query(\r\n            'CREATE TABLE IF NOT EXISTS navigation (id varchar(36), name varchar(255), completed boolean)',\r\n            err => {\r\n                if (err) return rej(err);\r\n\r\n                console.log(`Connected to mysql db at host ${HOST}`);\r\n                acc();\r\n            },\r\n        );\r\n    });\r\n}\r\n\r\nasync function teardown() {\r\n    return new Promise((acc, rej) => {\r\n        pool.end(err => {\r\n            if (err) rej(err);\r\n            else acc();\r\n        });\r\n    });\r\n}\r\n\r\nasync function getItems() {\r\n    return new Promise((acc, rej) => {\r\n        pool.query('SELECT * FROM navigation', (err, rows) => {\r\n            if (err) return rej(err);\r\n            acc(\r\n                rows.map(item =>\r\n                    Object.assign({}, item, {\r\n                        completed: item.completed === 1,\r\n                    }),\r\n                ),\r\n            );\r\n        });\r\n    });\r\n}\r\n\r\nasync function getItem(id) {\r\n    return new Promise((acc, rej) => {\r\n        pool.query('SELECT * FROM navigation WHERE id=?', [id], (err, rows) => {\r\n            if (err) return rej(err);\r\n            acc(\r\n                rows.map(item =>\r\n                    Object.assign({}, item, {\r\n                        completed: item.completed === 1,\r\n                    }),\r\n                )[0],\r\n            );\r\n        });\r\n    });\r\n}\r\n\r\nasync function storeItem(item) {\r\n    return new Promise((acc, rej) => {\r\n        pool.query(\r\n            'INSERT INTO navigation (id, name, completed) VALUES (?, ?, ?)',\r\n            [item.id, item.name, item.completed ? 1 : 0],\r\n            err => {\r\n                if (err) return rej(err);\r\n                acc();\r\n            },\r\n        );\r\n    });\r\n}\r\n\r\nasync function updateItem(id, item) {\r\n    return new Promise((acc, rej) => {\r\n        pool.query(\r\n            'UPDATE navigation SET name=?, completed=? WHERE id=?',\r\n            [item.name, item.completed ? 1 : 0, id],\r\n            err => {\r\n                if (err) return rej(err);\r\n                acc();\r\n            },\r\n        );\r\n    });\r\n}\r\n\r\nasync function removeItem(id) {\r\n    return new Promise((acc, rej) => {\r\n        pool.query('DELETE FROM navigation WHERE id = ?', [id], err => {\r\n            if (err) return rej(err);\r\n            acc();\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    init,\r\n    teardown,\r\n    getItems,\r\n    getItem,\r\n    storeItem,\r\n    updateItem,\r\n    removeItem,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.dedfc6a7.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport * as REACT from 'react';\nimport {Button} from '@material-ui/core';\nimport {DataGrid} from '@material-ui/data-grid';\n\nconst db = require('./persistence');\n\nrequire('dotenv').config();\n\nconst API_USER = process.env.REACT_APP_USER;\nconst API_PASS = process.env.REACT_APP_PASS;\n\n\nconst applicationReducer = (state, action) => {\n  switch (action.type) {\n  case 'FETCH_INIT' :\n    return {\n      ...state,\n      isLoading: true,\n      isError: false,\n    };\n  case 'FETCH_SUCCESS' :\n    return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n    };\n  case 'FETCH_FAILURE' :\n      return {\n          ...state,\n          isLoading: false,\n          isError: true,\n          error: action.error,\n      };\n  default: throw new Error();\n  }\n};\n\nfunction App() {\n\n  const [applications, dispatchApplications] = REACT.useReducer(applicationReducer, {data: [], isLoading: false, isError: false});\n\n  const getData = () => { \n      dispatchApplications({type: 'FETCH_INIT'});\n\n      const query = ``\n\n      fetch(query)\n        .then((response) => response.json())\n        .then((result) => {\n          dispatchApplications({\n            type: 'FETCH_SUCCESS',\n            payload: result.records,\n          });\n          console.log(result)\n        })\n        .catch((error) => {\n          dispatchApplications({\n              type: 'FETCH_FAILURE',\n              error: error.message,\n          });\n          console.log(error.message)\n        });\n  };\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"container-Navigation\">\n        <ul className=\"navigation\">\n          <li className=\"logo\"><a className=\"logo\" href=\"#\"><img src={logo} className=\"App-logo\" alt=\"logo\" />ABlack Magic</a></li>\n          <li className=\"item-Nav\"><a href=\"\">Home</a></li>\n          <li className=\"item-Nav\"><a href=\"\">About</a></li>\n          <li className=\"item-Nav\"><a href=\"\">Beta Zone</a></li>\n        </ul>\n      </div>\n      <div className=\"container-Body\">\n        <div className=\"item1-Image\">\n          hello\n        </div>\n        <div className=\"item2-Links\">\n          <Button variant=\"outlined\" color=\"primary\"> Hello World2</Button>\n        </div>\n    </div>\n  </div>\n  )\n};\n\n\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}