# This is a basic workflow to help you get started with Actions

name: AB-Test-Zone

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  name: setup environment variables
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  PROJECT_NAME: noble-nation-321921
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  SERVICE_NAME: getting-started
  REGISTERY_HOSTNAME: gcr.io
  
jobs:
  publish:
    name: push docker image to docker hub
    runs-on: ubuntu-latest
    
    steps:
      - name: check out the repo
        uses: actions/checkout@v2
      
      # get secret
      - name: test variables
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run:
          echo $PROJECT_ID
          
      # Connect to GCP
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_KEY }}
          #export_default_credentials: true
          
      # Authenticate docker to work over GCLOUD CLI
      - name: authenticate docker over GCLOUD SDK
        run: gcloud auth configure-docker
      
      # Build docker image
      - name: Build
        run: |
          export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'`
          echo $TAG
          docker build -t "$REGISTERY_HOSTNAME"/"$PROJECT_NAME"/"$SERVICE_NAME":"$TAG" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" .
            
      # Push the image to GCP
      - name: Publish
        run: |
          export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'`
          echo $TAG
          docker push "$REGISTERY_HOSTNAME"/"$PROJECT_NAME"/"$SERVICE_NAME":"$TAG"
          docker tag "$REGISTERY_HOSTNAME"/"$PROJECT_NAME"/"$SERVICE_NAME":"$TAG" "$REGISTERY_HOSTNAME"/"$PROJECT_NAME"/"$SERVICE_NAME":latest
          docker push "$REGISTERY_HOSTNAME"/"$PROJECT_NAME"/"$SERVICE_NAME":latest

    
    

